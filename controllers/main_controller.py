# ============================================================================
# controllers/main_controller.py
# ============================================================================
from views.menu_view import MenuView
from database import Database
from controllers.player_controller import PlayerController
from controllers.tournament_controller import TournamentController
from controllers.report_controller import ReportController
from controllers.round_controller import RoundController


class MainController:
    """Contr√¥leur principal de l'application"""

    def __init__(self):
        self.players = []
        self.tournaments = []
        self.view = MenuView()
        self.db = Database()

        # Initialisation des sous-contr√¥leurs - CORRIG√â
        self.player_controller = PlayerController(self.players, self.view, self.tournaments)  # ‚Üê AJOUT de self.tournaments
        self.round_controller = RoundController(self.players, self.view)  # ‚Üê AJOUT de self.view
        self.tournament_controller = TournamentController(
            self.players,
            self.tournaments,
            self.view,
            self.round_controller
        )
        self.report_controller = ReportController(
            self.players,
            self.tournaments,
            self.view
        )

        self.load_data()

    def run(self):
        """Boucle principale du programme"""
        while True:
            choice = self.view.display_main_menu()

            if choice == "1":
                self.player_controller.manage_players()
            elif choice == "2":
                self.tournament_controller.manage_tournaments()
            elif choice == "3":
                self.report_controller.display_reports()
            elif choice == "4":
                self.save_data()
            elif choice == "5":
                self.save_data()
                print("Au revoir !")
                break
            else:
                print("Option invalide !")

    def load_data(self):
        """Charge les donn√©es depuis la base de donn√©es"""
        try:
            self.players = self.db.load_players()
            self.tournaments = self.db.load_tournaments(self.players)

            # Mise √† jour des r√©f√©rences dans les contr√¥leurs
            self._update_controller_references()

            if self.players or self.tournaments:
                print(f"\n‚úì Donn√©es charg√©es : {len(self.players)} joueurs, "
                      f"{len(self.tournaments)} tournois")
        except Exception as e:
            print(f"\n‚ö† Erreur lors du chargement : {e}")
            print("D√©marrage avec des donn√©es vides.")

    def save_data(self):
        """Sauvegarde les donn√©es dans la base de donn√©es"""
        try:
            print(f"\nüíæ Sauvegarde en cours...")
            print(f"üìä {len(self.players)} joueurs √† sauvegarder")
            print(f"üèÜ {len(self.tournaments)} tournois √† sauvegarder")
            
            # Sauvegarde r√©elle
            self.db.save_players(self.players)
            self.db.save_tournaments(self.tournaments, self.players)
            
            # Message de confirmation FORC√â
            print(f"\n‚úÖ DONN√âES SAUVEGARD√âES AVEC SUCC√àS !")
            print(f"‚úÖ {len(self.players)} joueurs sauvegard√©s")
            print(f"‚úÖ {len(self.tournaments)} tournois sauvegard√©s")
            
            # V√©rification fichier
            import os
            if os.path.exists('db.json'):
                file_size = os.path.getsize('db.json')
                print(f"üìÅ Fichier: db.json ({file_size} octets)")
            else:
                print("‚ùå Fichier db.json non trouv√©")
                
            input("\n‚Üµ Appuyez sur ENTREE pour continuer...")
            
        except Exception as e:
            print(f"\n‚ùå ERREUR LORS DE LA SAUVEGARDE : {e}")
            import traceback
            traceback.print_exc()
            input("\n‚Üµ Appuyez sur ENTREE pour continuer...")

    def _update_controller_references(self):
        """Met √† jour les r√©f√©rences des listes dans les contr√¥leurs"""
        self.player_controller.players = self.players
        self.player_controller.tournaments = self.tournaments  # ‚Üê AJOUT√â
        self.round_controller.players = self.players
        self.tournament_controller.players = self.players
        self.tournament_controller.tournaments = self.tournaments
        self.report_controller.players = self.players
        self.report_controller.tournaments = self.tournaments